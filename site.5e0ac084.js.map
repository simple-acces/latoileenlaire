{"version":3,"sources":["js/site.js"],"names":["showBarOn","menu","forEach","_","classList","add","hideBarOn","remove","triggerBarOn","target","targetedMenu","document","querySelectorAll","id","visibility","current","observerSections","IntersectionObserver","entries","intersection","topSection","Object","values","sort","a","b","intersectionRect","height","threshold","initSectionObservers","section","observe","initGalerie","addEventListener","currentTarget","capture","parentElement"],"mappings":";AAAA,IAAMA,EAAY,SAACC,GAASA,OAAAA,EAAKC,QAAQ,SAACC,GAAMA,OAAAA,EAAEC,UAAUC,IAAI,eAE1DC,EAAY,SAACL,GAASA,OAAAA,EAAKC,QAAQ,SAACC,GAAMA,OAAAA,EAAEC,UAAUG,OAAO,eAE7DC,EAAe,SAACC,GACdC,IAAAA,EAAeC,SAASC,iBACTH,mBAAAA,OAAAA,EAAOI,GAD5B,eAGAb,EAAUU,GACVJ,EACEK,SAASC,iBAAyCH,wBAAAA,OAAAA,EAAOI,GADlD,kBAKLC,EAAa,GACbC,EAAU,GACVC,EAAmB,IAAIC,qBAC3B,SAACC,GACCA,EAAQhB,QACN,SAACiB,GAAkBL,OAAAA,EAAWK,EAAaV,OAAOI,IAAMM,IAEpDC,IAAAA,EAAaC,OAAOC,OAAOR,GAAYS,KAC3C,SAACC,EAAGC,GAAMA,OAAAA,EAAEC,iBAAiBC,OAASH,EAAEE,iBAAiBC,SACzD,GAAGlB,OACLD,EAAaY,IAEf,CACEQ,UAAW,CAAC,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,KAIvDC,EAAuB,WAC3BlB,OAAAA,SACGC,iBAAiB,WACjBV,QAAQ,SAAC4B,GAAYd,OAAAA,EAAiBe,QAAQD,MAE7CE,EAAc,WAClBrB,SACGC,iBAAiB,kBACjBV,QAAQ,SAACC,GACRA,OAAAA,EAAE8B,iBACA,QACA,SAAA,GAAuBC,OAApBA,EAAAA,cAAkC9B,UAAUC,IAAI,aACnD,CAAE8B,SAAS,MAIjBxB,SACGC,iBAAiB,kBACjBV,QAAQ,SAACC,GACRA,OAAAA,EAAE8B,iBAAiB,QAAS,SAAA,GAC1BC,OAD6BA,EAAAA,cACfE,cAAcA,cAAchC,UAAUG,OAAO,iBAKnE0B,iBAAiB,mBAAoB,WACnCJ,IACAG","file":"site.5e0ac084.js","sourceRoot":"..","sourcesContent":["const showBarOn = (menu) => menu.forEach((_) => _.classList.add(\"selected\"));\n\nconst hideBarOn = (menu) => menu.forEach((_) => _.classList.remove(\"selected\"));\n\nconst triggerBarOn = (target) => {\n  const targetedMenu = document.querySelectorAll(\n    `header a[href=\"#${target.id}\"] .button`\n  );\n  showBarOn(targetedMenu);\n  hideBarOn(\n    document.querySelectorAll(`header a:not([href=\"#${target.id}\"]) .button`)\n  );\n};\n\nconst visibility = {};\nconst current = \"\";\nconst observerSections = new IntersectionObserver(\n  (entries) => {\n    entries.forEach(\n      (intersection) => (visibility[intersection.target.id] = intersection)\n    );\n    const topSection = Object.values(visibility).sort(\n      (a, b) => b.intersectionRect.height - a.intersectionRect.height\n    )[0].target;\n    triggerBarOn(topSection);\n  },\n  {\n    threshold: [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1],\n  }\n);\n\nconst initSectionObservers = () =>\n  document\n    .querySelectorAll(\"section\")\n    .forEach((section) => observerSections.observe(section));\n\nconst initGalerie = () => {\n  document\n    .querySelectorAll(\".grid .element\")\n    .forEach((_) =>\n      _.addEventListener(\n        \"click\",\n        ({ currentTarget }) => currentTarget.classList.add(\"selected\"),\n        { capture: true }\n      )\n    );\n\n  document\n    .querySelectorAll(\".opened .close\")\n    .forEach((_) =>\n      _.addEventListener(\"click\", ({ currentTarget }) =>\n        currentTarget.parentElement.parentElement.classList.remove(\"selected\")\n      )\n    );\n};\n\naddEventListener(\"DOMContentLoaded\", () => {\n  initSectionObservers();\n  initGalerie();\n});\n"]}